{{ if and .Values.notifications.enabled .Values.notifications.bots.slack.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "argocd.notifications" . }}-slack-bot
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: notifications-slack-bot
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: notifications-slack-bot
  template:
    metadata:
      {{- if .Values.notifications.bots.slack.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: notifications-slack-bot
        {{- if .Values.notifications.bots.slack.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "argocd.notifications.bots.slack.serviceAccountName" . }}
      {{- include "argocd.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.notifications.bots.slack.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.notifications.bots.slack.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.notifications.bots.slack.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.notifications.bots.slack.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.notifications.bots.slack.podAffinityPreset "component" "notifications" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.notifications.bots.slack.podAntiAffinityPreset "component" "notifications" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.notifications.bots.slack.nodeAffinityPreset.type "key" .Values.notifications.bots.slack.nodeAffinityPreset.key "values" .Values.notifications.bots.slack.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.notifications.bots.slack.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.notifications.bots.slack.priorityClassName }}
      priorityClassName: {{ .Values.notifications.bots.slack.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.notifications.bots.slack.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.notifications.bots.slack.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: notifications-slack-bot
          image: {{ include "argocd.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.notifications.bots.slack.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.notifications.bots.slack.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - argocd-notifications
            - bot
          {{- if .Values.notifications.bots.slack.extraArgs }}
          {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.extraArgs "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          env:
            {{- if .Values.notifications.bots.slack.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.notifications.bots.slack.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.notifications.bots.slack.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.notifications.bots.slack.resources }}
          resources: {{- toYaml .Values.notifications.bots.slack.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.notifications.bots.slack.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.notifications.bots.slack.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.notifications.bots.slack.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Values.notifications.bots.slack.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.notifications.bots.slack.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{ end }}
