{{- if and .Values.applicationSet.enabled .Values.applicationSet.metrics.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "argocd.applicationSet" . }}-metrics
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: applicationSet
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- with .Values.applicationSet.metrics.service.annotations }}
  annotations:
  {{- if .Values.commonAnnotations }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  {{- if .Values.applicationSet.metrics.service.annotations }}
  {{- include "common.tplvalues.render" ( dict "value" .Values.applicationSet.metrics.service.annotations "context" $ ) | nindent 4 }}
  {{- end }}
  {{- end }}
spec:
  type: {{ .Values.applicationSet.metrics.service.type }}
  {{- if and .Values.applicationSet.metrics.service.clusterIP (eq .Values.applicationSet.metrics.service.type "ClusterIP") }}
  clusterIP: {{ .Values.applicationSet.metrics.service.clusterIP }}
  {{- end }}
  {{- if (or (eq .Values.applicationSet.metrics.service.type "LoadBalancer") (eq .Values.applicationSet.metrics.service.type "NodePort")) }}
  externalTrafficPolicy: {{ .Values.applicationSet.metrics.service.externalTrafficPolicy | quote }}
  {{- end }}
  {{- if eq .Values.applicationSet.metrics.service.type "LoadBalancer" }}
  loadBalancerSourceRanges: {{ .Values.applicationSet.metrics.service.loadBalancerSourceRanges }}
  {{- end }}
  {{- if (and (eq .Values.applicationSet.metrics.service.type "LoadBalancer") (not (empty .Values.applicationSet.metrics.service.loadBalancerIP))) }}
  loadBalancerIP: {{ .Values.applicationSet.metrics.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.applicationSet.metrics.service.sessionAffinity }}
  sessionAffinity: {{ .Values.applicationSet.metrics.service.sessionAffinity }}
  {{- end }}
  {{- if .Values.applicationSet.metrics.service.sessionAffinityConfig }}
  sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.applicationSet.metrics.service.sessionAffinityConfig "context" $) | nindent 4 }}
  {{- end }}
  ports:
    - name:  http-metrics
      targetPort: metrics
      port: {{ .Values.applicationSet.metrics.service.port }}
      protocol: TCP
      {{- if (and (or (eq .Values.applicationSet.service.type "NodePort") (eq .Values.applicationSet.service.type "LoadBalancer")) (not (empty .Values.applicationSet.metrics.service.nodePort))) }}
      nodePort: {{ .Values.applicationSet.metrics.service.nodePort }}
      {{- else if eq .Values.applicationSet.metrics.service.type "ClusterIP" }}
      nodePort: null
      {{- end }}
  selector: {{- include "common.labels.matchLabels" . | nindent 4 }}
    app.kubernetes.io/component: applicationSet
{{- end }}
