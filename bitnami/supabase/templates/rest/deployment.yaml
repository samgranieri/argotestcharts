{{- if .Values.rest.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "supabase.rest.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/part-of: supabase
    app.kubernetes.io/component: rest
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.rest.replicaCount }}
  {{- if .Values.rest.updateStrategy }}
  strategy: {{- toYaml .Values.rest.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: rest
  template:
    metadata:
      annotations:
        {{- if .Values.rest.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.rest.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        checksum/default-configmap: {{ include (print $.Template.BasePath "/rest/default-configmap.yaml") . | sha256sum }}
        {{- if .Values.rest.extraConfig }}
        checksum/extra-configmap: {{ include (print $.Template.BasePath "/rest/extra-configmap.yaml") . | sha256sum }}
        {{- end }}
        checksum/jwt-secret: {{ include (print $.Template.BasePath "/jwt-secret.yaml") . | sha256sum }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: rest
        {{- if .Values.rest.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.rest.podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "supabase.serviceAccountName" . }}
      {{- include "supabase.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.rest.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.rest.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.rest.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.rest.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.rest.podAffinityPreset "component" "rest" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.rest.podAntiAffinityPreset "component" "rest" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.rest.nodeAffinityPreset.type "key" .Values.rest.nodeAffinityPreset.key "values" .Values.rest.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.rest.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.rest.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.rest.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.rest.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.rest.priorityClassName }}
      priorityClassName: {{ .Values.rest.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.rest.schedulerName }}
      schedulerName: {{ .Values.rest.schedulerName | quote }}
      {{- end }}
      {{- if .Values.rest.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.rest.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.rest.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.rest.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.rest.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.rest.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if not .Values.diagnosticMode.enabled }}
        {{- include "supabase.waitForDBInitContainer" . | nindent 8 }}
        {{- end }}
        {{- if .Values.rest.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.rest.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: postgrest
          image: {{ template "supabase.rest.image" . }}
          imagePullPolicy: {{ .Values.rest.image.pullPolicy }}
          {{- if .Values.rest.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.rest.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.rest.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.rest.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.rest.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.rest.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: DB_USER
              value: {{ include "supabase.database.user" . | quote }}
            - name: DB_HOST
              value: {{ include "supabase.database.host" . | quote }}
            - name: DB_PORT
              value: {{ include "supabase.database.port" . | quote }}
            - name: DB_NAME
              value: {{ include "supabase.database.name" . | quote }}
            - name: DB_SSL
              value: {{ .Values.dbSSL | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "supabase.database.secretName" . }}
                  key: {{ include "supabase.database.passwordKey" . | quote }}
            - name: PGRST_DB_URI
              value: "postgresql://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=$(DB_SSL)"
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "supabase.jwt.secretName" . }}
                  key: {{ include "supabase.jwt.secretKey" . }}
            {{- if .Values.rest.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.rest.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "supabase.rest.defaultConfigmapName" . }}
            {{- if .Values.rest.extraConfigExistingConfigmap }}
            - configMapRef:
                name: {{ include "supabase.rest.extraConfigmapName" . }}
            {{- end }}
            {{- if .Values.rest.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.rest.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.rest.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.rest.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.rest.resources }}
          resources: {{- toYaml .Values.rest.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.rest.containerPorts.http }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.rest.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.rest.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.rest.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.rest.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- if .Values.rest.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.rest.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.rest.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.rest.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- if .Values.rest.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.rest.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.rest.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.rest.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /
              port: http
          {{- end }}
          {{- end }}
          {{- if .Values.rest.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.rest.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.rest.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.rest.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.rest.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.rest.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.rest.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.rest.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
