{{- if .Values.auth.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "supabase.auth.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/part-of: supabase
    app.kubernetes.io/component: auth
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.auth.replicaCount }}
  {{- if .Values.auth.updateStrategy }}
  strategy: {{- toYaml .Values.auth.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: auth
  template:
    metadata:
      annotations:
        {{- if .Values.auth.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.auth.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        checksum/default-configmap: {{ include (print $.Template.BasePath "/auth/default-configmap.yaml") . | sha256sum }}
        {{- if .Values.auth.extraConfig }}
        checksum/extra-configmap: {{ include (print $.Template.BasePath "/auth/extra-configmap.yaml") . | sha256sum }}
        {{- end }}
        checksum/jwt-secret: {{ include (print $.Template.BasePath "/jwt-secret.yaml") . | sha256sum }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: auth
        {{- if .Values.auth.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.auth.podLabels "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "supabase.serviceAccountName" . }}
      {{- include "supabase.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.auth.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.auth.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.auth.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.auth.podAffinityPreset "component" "auth" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.auth.podAntiAffinityPreset "component" "auth" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.auth.nodeAffinityPreset.type "key" .Values.auth.nodeAffinityPreset.key "values" .Values.auth.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.auth.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.auth.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.auth.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.priorityClassName }}
      priorityClassName: {{ .Values.auth.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.auth.schedulerName }}
      schedulerName: {{ .Values.auth.schedulerName | quote }}
      {{- end }}
      {{- if .Values.auth.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.auth.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.auth.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.auth.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if not .Values.diagnosticMode.enabled }}
        {{- include "supabase.waitForDBInitContainer" . | nindent 8 }}
        {{- end }}
        {{- if .Values.auth.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.auth.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: gotrue
          image: {{ template "supabase.auth.image" . }}
          imagePullPolicy: {{ .Values.auth.image.pullPolicy }}
          {{- if .Values.auth.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.auth.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.auth.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.auth.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.auth.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.auth.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: DB_USER
              value: {{ include "supabase.database.user" . | quote }}
            - name: DB_HOST
              value: {{ include "supabase.database.host" . | quote }}
            - name: DB_PORT
              value: {{ include "supabase.database.port" . | quote }}
            - name: DB_NAME
              value: {{ include "supabase.database.name" . | quote }}
            - name: DB_SSL
              value: {{ .Values.dbSSL | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "supabase.database.secretName" . }}
                  key: {{ include "supabase.database.passwordKey" . | quote }}
            - name: GOTRUE_DB_DATABASE_URL
              value: "postgresql://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?search_path=auth&sslmode=$(DB_SSL)"
            - name: GOTRUE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "supabase.jwt.secretName" . }}
                  key: {{ include "supabase.jwt.secretKey" . }}
            - name: GOTRUE_OPERATOR_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "supabase.jwt.secretName" . }}
                  key: {{ include "supabase.jwt.secretKey" . }}
            {{- if .Values.auth.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.auth.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "supabase.auth.defaultConfigmapName" . }}
            {{- if .Values.auth.extraConfigExistingConfigmap }}
            - configMapRef:
                name: {{ include "supabase.auth.extraConfigmapName" . }}
            {{- end }}
            {{- if .Values.auth.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.auth.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.auth.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.auth.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.auth.resources }}
          resources: {{- toYaml .Values.auth.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.auth.containerPorts.http }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.auth.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.auth.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.auth.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.auth.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- if .Values.auth.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.auth.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.auth.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.auth.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- if .Values.auth.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.auth.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.auth.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.auth.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- end }}
          {{- if .Values.auth.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.auth.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.auth.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.auth.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.auth.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.auth.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.auth.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.auth.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
